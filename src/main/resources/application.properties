# Define the datasource

datasource.url= jdbc:postgresql://hvz-backend-api.postgres.database.azure.com:5432/postgres?sslmode=require
spring.datasource.username= hvz
spring.datasource.password=Mostafa123+

#spring.datasource.url = jdbc:postgresql://localhost:5432/HvZ
#spring.datasource.username=postgres
#spring.datasource.password=postgres

# local run
#spring.datasource.url=jdbc:postgresql://localhost:5432/HvZ
#spring.datasource.username= postgres
#spring.datasource.password=postgres
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect


spring.profiles.active= ${SPRING_ACTIVE_PROFILES:dev}


# control of the hibernate structure Create wil delete the database after the program is ended

spring.jpa.hibernate.ddl-auto=create

# ensuring that the database is open to manipulation after creating of table

spring.jpa.defer-datasource-initialization= true

#for running the sql script

spring.sql.init.mode= always

#Turn Statistics on
logging.level.org.hibernate.stat=debug

# Enable logging
spring.jpa.show-sql=true

# Define the datasource

#spring.security.oauth2.resourceserver.jwt.issuer-uri=https://dev-cog2xps1avrmhryd.uk.auth0.com/
#auth0.audience=dev-cog2xps1avrmhryd.uk.auth0.com

#spring.security.oauth2.resourceserver.jwt.issuer-uri= http://localhost:8083/auth/realms/Testing
#spring.security.oauth2.resourceserver.jwt.jwk-set-uri= http://localhost:8083/auth/realms/Testing/protocol/openid-connect/certs
spring.security.oauth2.resourceserver.jwt.issuer-uri= https://lemur-3.cloud-iam.com/auth/realms/hvz-noroff-2023
spring.security.oauth2.resourceserver.jwt.jwk-set-uri= https://lemur-3.cloud-iam.com/auth/realms/hvz-noroff-2023/protocol/openid-connect/certs
